# Default values for TheIdServer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

image:
  repository: "aguacongas/theidserver.duende"
  pullPolicy: "IfNotPresent"
  # Overrides the image tag whose default is the chart appVersion.
  tag: 

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

deploymentAnnotations: {}
  # wave.pusher.com/update-on-config-change: "true"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

volumes: []
  # name: binary-config
  # mountPath: /usr/local/share/binary
  # spec: 
  #   persistentVolumeClaim: 
  #     claimName: theidserver-pvc

service:
  type: ClusterIP
  ports: 
    https: 5443
    
ingress:
  enabled: false
  annotations:
    # this sample use https://github.com/kubernetes/ingress-nginx
    # SSL Passthrough must be enable (https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md#ssl-passthrough) 
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: theidserver.private.local
  # tls node is not mapped because the proxied server has its certificate.

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Dependencies configuration
seq:
  enabled: true
mysql:
  enabled: true
  auth:   
    user: theidserver # The mysql user is required if connectionString is not defined 
    name: theidserver # The mysql name is required if connectionString is not defined
    password: # The mysql user is required if connectionString is not defined
redis:
  enabled: true
  auth:
    password: #the redis password
    
# override the generated connection string
connectionString: 

# appSettings.json ovverride
appSettings:
  # by env vars
  env: {}
  # by appsetting.json file
  file:
    SiteOptions:
      Name: TheIdServer
    IdentityOptions:
      UserOptions:
        AllowedUserNameCharacters: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._@+ '
      SignInOptions:
        RequireConfirmedAccount: false
    IdentityServerOptions:
      Endpoints:
        EnableJwtRequestUri: true
    AccountOptions:
      ShowLogoutPrompt: false
      AutomaticRedirectAfterSignOut: true
    IdentityServer:
      Key:
        Type: KeysRotation
        StorageKind: EntityFramework
        KeyProtectionOptions: 
          KeyProtectionKind: "X509"
          X509CertificatePath: "/usr/local/share/ca-certificates/sk.pfx"
    DataProtectionOptions:
      StorageKind: EntityFramework
      KeyProtectionOptions: 
        KeyProtectionKind: "X509"
        X509CertificatePath: "/usr/local/share/ca-certificates/dp.pfx"
    TokenCleanupInterval: '00:05:00'
    Migrate: true
    DbType: MySql
    Seed: true
    AuthenticatorIssuer: TheIdServer
    EnableOpenApiDoc: true
    SwaggerUiSettings:
      OAuth2Client:
        ClientId: theidserver-swagger
        AppName: TheIdServer Swagger UI
        UsePkceWithAuthorizationCodeGrant: true
      WithCredentials: true
    ApiAuthentication:
      Authority: https://localhost:{{ .Values.service.ports.https }}
      RequireHttpsMetadata: false
      SupportedTokens: Both
      ApiName: theidserveradminapi
      ApiSecret: 5b556f7c-b3bc-4b5b-85ab-45eed0cb962d
      EnableCaching: true
      CacheDuration: '0:10:0'
      LegacyAudienceValidation: true
    EmailApiAuthentication:
      Authority: https://localhost:{{ .Values.service.ports.https }}
      ApiUrl: https://localhost:{{ .Values.service.ports.https }}/api/email
      ClientId: public-server
      ClientSecret: 84137599-13d6-469c-9376-9e372dd2c1bd
      Scope: theidserveradminapi
      HttpClientName: email
    BackchannelAuthenticationUserNotificationServiceOptions:
      Authority: https://localhost:{{ .Values.service.ports.https }}
      ApiUrl: https://localhost:{{ .Values.service.ports.https }}/api/email
      ClientId: public-server
      ClientSecret: 84137599-13d6-469c-9376-9e372dd2c1bd
      Scope: theidserveradminapi
      HttpClientName: ciba
    DynamicConfigurationOptions:
      ProviderType: "Aguacongas.DynamicConfiguration.Redis.RedisConfigurationProvider, Aguacongas.DynamicConfiguration.Redis"
    DynamicClientRegistrationOptions:
      AllowedContacts:
        Contact: "certification@oidf.org"
        AllowedHosts: [ "www.certification.openid.net" ]
    RedisConfigurationOptions:
      HashKey: "Aguacongas.TheIdServer.Duende"
      Channel: "Aguacongas.TheIdServer.Duende.Channel"   
    SignalR:
      HubOptions:
        EnableDetailedErrors: true
      UseMessagePack: true
      RedisOptions:
        Configuration:
          ChannelPrefix: TheIdServer
    Serilog:
      LevelSwitches:
        "$controlSwitch": Information
      MinimumLevel:
        ControlledBy: "$controlSwitch"
      WriteTo:
      - Name: Seq
        Args:
          serverUrl: http://localhost:5341
          controlLevelSwitch: "$controlSwitch"
          apiKey: DVYuookX2vOq078fuOyJ
      - Name: Console
        Args:
          outputTemplate: "[{Timestamp:HH:mm:ss} {Level}] {SourceContext}{NewLine}{Message:lj}{NewLine}{Exception}{NewLine}"
          theme: Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Literate, Serilog.Sinks.Console
      - Name: Debug
        Args:
          outputTemplate: "[{Timestamp:HH:mm:ss} {Level}] {SourceContext}{NewLine}{Message:lj}{NewLine}{Exception}{NewLine}"
      Enrich:
      - FromLogContext
      - WithMachineName
      - WithThreadId
    InitialData:
      Clients:
      - ClientId: "theidserveradmin"
        ClientName: "TheIdServer admin SPA Client"
        ClientUri: "https://localhost:{{ .Values.service.ports.https }}"
        ClientClaimsPrefix: null
        AllowedGrantTypes: [ "authorization_code" ]
        RequirePkce: true
        RequireClientSecret: false
        BackChannelLogoutSessionRequired: false
        FrontChannelLogoutSessionRequired: false
        RedirectUris: [ "https://localhost:{{ .Values.service.ports.https }}/authentication/login-callback" ]
        PostLogoutRedirectUris: [ "https://localhost:{{ .Values.service.ports.https }}/authentication/logout-callback" ]
        AllowedCorsOrigins: [ "https://localhost:{{ .Values.service.ports.https }}" ]
        AllowedScopes: [ "openid", "profile", "theidserveradminapi" ]
        AccessTokenType: "Reference"
      - ClientId: "public-server"
        ClientName: "Public server Credentials Client"
        ClientClaimsPrefix: null
        AllowedGrantTypes: [ "client_credentials" ]
        ClientSecrets:
        - Type: "SharedSecret"
          Value: ""
        Claims:
        - Type: "role"
          Value: "Is4-Writer"
        - Type: "role"
          Value: "Is4-Reader"        
        BackChannelLogoutSessionRequired: false
        FrontChannelLogoutSessionRequired: false
        AllowedScopes: [ "openid", "profile", "theidserveradminapi" ]
        AccessTokenType: "Reference"
      - ClientId: "theidserver-swagger"
        ClientName: "TheIdServer Swagger UI"
        ClientClaimsPrefix: null
        AllowedGrantTypes: [ "implicit" ]
        AllowAccessTokensViaBrowser: true
        RequireClientSecret: false
        BackChannelLogoutSessionRequired: false
        FrontChannelLogoutSessionRequired: false
        AllowedScopes: [ "theidserveradminapi", "theidservertokenapi" ]
        AllowedCorsOrigins: [ "https://localhost:{{ .Values.service.ports.https }}" ]
        RedirectUris: [ "https://localhost:{{ .Values.service.ports.https }}/api/swagger/oauth2-redirect.html" ]
      ApiScopes:
      - Name: "theidserveradminapi"
        DisplayName: "TheIdServer admin API scope"
        UserClaims: [ "name", "role" ]
      - Name: theidservertokenapi
        DisplayName: "TheIdServer token API scope"
        UserClaims: [ "name", "role" ]
      Apis:
      - Name: "theidserveradminapi"
        DisplayName: "TheIdServer admin API"
        UserClaims: [ "name", "role" ]
        ApiSecrets:
        - Type: "SharedSecret"
        Scopes: [ "theidserveradminapi", "theidservertokenapi" ]
      Users:
      - UserName: "alice"
        Email: "alice@theidserver.com"
        EmailConfirmed: true
        PhoneNumber: "+41766403736"
        PhoneNumberConfirmed: true
        Password: "Pass123$"
        Roles: 
        - "Is4-Writer"
        - "Is4-Reader"
        Claims:
        - ClaimType: "name"
          ClaimValue: "Alice Smith"
        - ClaimType: "given_name"
          ClaimValue: "Alice"
        - ClaimType: "family_name"
          ClaimValue: "Smith"
        - ClaimType: "middle_name"
          ClaimValue: "Alice Smith"
        - ClaimType: "nickname"
          ClaimValue: "Alice"
        - ClaimType: "address"
          ClaimValue: "{ \"street_address\": \"One Hacker Way\", \"locality\": \"Heidelberg\", \"postal_code\": \"69118\", \"country\": \"Germany\" }"
        - ClaimType: "birthdate"
          ClaimValue: "1970-01-01"
        - ClaimType: "zoneinfo"
          ClaimValue: "ch"
        - ClaimType: "gender"
          ClaimValue: "female"
        - ClaimType: "profile"
          ClaimValue: "http://alice.com/profile"
        - ClaimType: "locale"
          ClaimValue: "fr"
        - ClaimType: "picture"
          ClaimValue: "http://alice.com/picture"
## admin ui configuration
adminSettings: 
  prerendered: true
  settingsOptions:
    typeName: "Aguacongas.TheIdServer.BlazorApp.Models.ServerConfig, Aguacongas.TheIdServer.BlazorApp.Infrastructure"
    apiUrl:  "https://localhost:{{ .Values.service.ports.https }}/api/api/configuration"
  menuOptions:
    showSettings: true
  welcomeContenUrl: "https://localhost:5443/api/welcomefragment"
  administratorEmail: aguacongas@gmail.com
  apiBaseUrl: https://localhost:{{ .Values.service.ports.https }}/api
  loggingOptions:
    minimum: Warning
  authenticationPaths:
    remoteRegisterPath: "/identity/account/register"
    remoteProfilePath: "/identity/account/manage"
  userOptions:
    roleClaim: role
  providerOptions:
    authority: https://localhost:{{ .Values.service.ports.https }}/
    clientId: theidserveradmin
    defaultScopes:
    - theidserveradminapi
    postLogoutRedirectUri: https://localhost:{{ .Values.service.ports.https }}/authentication/logout-callback
    redirectUri: https://localhost:{{ .Values.service.ports.https }}/authentication/login-callback
    responseType: code

# Kestrel servers cerificates
ssl: 
  create: true
  issuer:
    enabled: false
    duration: 2160h # 90d
    renewBefore: 360h # 15d
    ref:
    kind:
  cn: 
  ipList: []
  sanList:
  validationPeriod: 365
  crt:
  key:
  ca:
    trust: true
    create: true
    issuer:
    validationPeriod: 3650
    crt: 
    key: 

# Certificate to crypt data protection keys
# This certificate can be generate
dataProtection:
  create: true
  cn:
  ipList: []
  sanList: []
  crt:
  key:

# Certificate to crypt signing keys
signingKey:
  create: true
  cn:
  ipList: []
  sanList: []
  crt:
  key: